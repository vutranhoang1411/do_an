// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: cabinet_rental.sql

package db

import (
	"context"
	"time"
)

const createCabinetRental = `-- name: CreateCabinetRental :one
insert into cabinet_locker_rentals(       
    CabinetID ,    
    CustomerID,   
    rentdate,
    duration,  
    paymentMethod, 
    fee     
) values(
    $1,$2,$3,$4,$5,$6
) returning id, cabinetid, customerid, rentdate, duration, paymentmethod, fee
`

type CreateCabinetRentalParams struct {
	Cabinetid     int64     `json:"cabinetid"`
	Customerid    int64     `json:"customerid"`
	Rentdate      time.Time `json:"rentdate"`
	Duration      int64     `json:"duration"`
	Paymentmethod string    `json:"paymentmethod"`
	Fee           string    `json:"fee"`
}

func (q *Queries) CreateCabinetRental(ctx context.Context, arg CreateCabinetRentalParams) (CabinetLockerRental, error) {
	row := q.db.QueryRowContext(ctx, createCabinetRental,
		arg.Cabinetid,
		arg.Customerid,
		arg.Rentdate,
		arg.Duration,
		arg.Paymentmethod,
		arg.Fee,
	)
	var i CabinetLockerRental
	err := row.Scan(
		&i.ID,
		&i.Cabinetid,
		&i.Customerid,
		&i.Rentdate,
		&i.Duration,
		&i.Paymentmethod,
		&i.Fee,
	)
	return i, err
}
