# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models


class Cabinet(models.Model):
    id = models.BigAutoField(primary_key=True)
    avail = models.BooleanField()
    open = models.BooleanField()
    coord = models.CharField()
    start = models.DateTimeField(blank=True, null=True)
    userid = models.ForeignKey('Customer', models.DO_NOTHING, db_column='userid', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'cabinet'


class CabinetLockerRentals(models.Model):
    id = models.BigAutoField(primary_key=True)
    cabinetid = models.ForeignKey(Cabinet, models.DO_NOTHING, db_column='cabinetid')
    customerid = models.ForeignKey('Customer', models.DO_NOTHING, db_column='customerid')
    rentdate = models.DateTimeField()
    duration = models.DurationField()
    paymentmethod = models.CharField()
    fee = models.DecimalField(max_digits=65535, decimal_places=65535)

    class Meta:
        managed = False
        db_table = 'cabinet_locker_rentals'


class Customer(models.Model):
    id = models.BigAutoField(primary_key=True)
    name = models.CharField()
    email = models.CharField(unique=True)
    password = models.CharField()
    photo = models.CharField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'customer'


class SchemaMigrations(models.Model):
    version = models.BigIntegerField(primary_key=True)
    dirty = models.BooleanField()

    class Meta:
        managed = False
        db_table = 'schema_migrations'


class Test(models.Model):
    t = models.DurationField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'test'
